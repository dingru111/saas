<?xml version="1.0" encoding="UTF-8"?>
<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xsi:noNamespaceSchemaLocation="http://ehcache.sf.net/ehcache.xsd" updateCheck="false"  
    monitoring="autodetect">
    <diskStore path="java.io.tmpdir/ehcache"/>

   <!--  默认的管理策略 
    maxElementsOnDisk： 在磁盘上缓存的element的最大数目，默认值为0，表示不限制。 
    eternal:设定缓存的elements是否永远不过期。如果为true，则缓存的数据始终有效，如果为false那么还要根据timeToIdleSeconds，timeToLiveSeconds判断。
    diskPersistent： 是否在磁盘上持久化。指重启jvm后，数据是否有效。默认为false。 
    diskExpiryThreadIntervalSeconds:对象检测线程运行时间间隔。标识对象状态（过期/持久化）的线程多长时间运行一次。 
    -->
    <defaultCache maxElementsInMemory="10000"
                  eternal="false"
                  timeToIdleSeconds="3600"
                  timeToLiveSeconds="3600"
                  overflowToDisk="true"
                  diskPersistent="false"
                  diskExpiryThreadIntervalSeconds="120"
                  memoryStoreEvictionPolicy="LRU"/>

    <!-- 对象无过期，一个1000长度的队列，最近最少使用的对象被删除 -->
     <cache name="noLimitCache"
           maxElementsInMemory="10000"
           eternal="true"
           overflowToDisk="false"
           timeToIdleSeconds="0"
           timeToLiveSeconds="0"
           memoryStoreEvictionPolicy="LFU">
           <cacheEventListenerFactory  
            class="net.sf.ehcache.distribution.RMICacheReplicatorFactory"  
            properties="replicateAsynchronously=true, replicatePuts=true, replicateUpdates=true,replicateUpdatesViaCopy=true, replicateRemovals=true "/>
        <!--服务器（Tomcat）启动就同步其他服务器（Tomcat）中的缓存，时间限制，具体属性不再这里说明 
        	<bootstrapCacheLoaderFactory  
            class="net.sf.ehcache.distribution.RMIBootstrapCacheLoaderFactory" />-->
     </cache>

    <!-- 组播方式：multicastGroupPort需要保证与其他系统不重复，进行端口注册  
    timeToLive的值指的是数据包可以传递的域或是范围。约定如下：
    0是限制在同一台主机
	1是限制在同一个子网
	32是限制在同一个场所
	64是限制在同一个地区
	128是限制在同一个大洲
	255是不限制
	在Java实现中默认值是1
    -->
    <cacheManagerPeerProviderFactory  
        class="net.sf.ehcache.distribution.RMICacheManagerPeerProviderFactory"  
        properties="peerDiscovery=automatic, multicastGroupAddress=230.0.0.1, multicastGroupPort=40001,
        timeToLiv=1" />
        
    <cacheManagerPeerListenerFactory  
        class="net.sf.ehcache.distribution.RMICacheManagerPeerListenerFactory"  
        properties="socketTimeoutMillis=1200000"/>

<!-- replicatePuts=true | false – 当一个新元素增加到缓存中的时候是否要复制到其他的peers. 默认是true。 -->
<!-- replicateUpdates=true | false – 当一个已经在缓存中存在的元素被覆盖时是否要进行复制。默认是true。 -->
<!-- replicateRemovals= true | false – 当元素移除的时候是否进行复制。默认是true。 -->
<!-- replicateAsynchronously=true | false – 复制方式是异步的（指定为true时）还是同步的（指定为false时）。默认是true。 -->
<!-- replicatePutsViaCopy=true | false – 当一个新增元素被拷贝到其他的cache中时是否进行复制指定为true时为复制，默认是true。 -->
<!-- replicateUpdatesViaCopy=true | false – 当一个元素被拷贝到其他的cache中时是否进行复制（指定为true时为复制），默认是true。 -->

     <cache name="userCache"
           maxElementsInMemory="10000"
           eternal="false"
           overflowToDisk="false"
           timeToIdleSeconds="1800"
           timeToLiveSeconds="1800"
           memoryStoreEvictionPolicy="LRU">
          <!-- <cacheEventListenerFactory  
            class="net.sf.ehcache.distribution.RMICacheReplicatorFactory" /> -->
        <!--服务器（Tomcat）启动就同步其他服务器（Tomcat）中的缓存，时间限制，具体属性不再这里说明 
        	<bootstrapCacheLoaderFactory  
            class="net.sf.ehcache.distribution.RMIBootstrapCacheLoaderFactory" />-->
    </cache>
     <!--
     <cache name="examCache"
           maxElementsInMemory="10000"
           eternal="false"
           overflowToDisk="false"
           timeToIdleSeconds="10800"
           timeToLiveSeconds="10800"
           memoryStoreEvictionPolicy="LRU">
         
    </cache>
    -->
</ehcache>